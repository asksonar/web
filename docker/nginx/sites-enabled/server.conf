upstream app {
  # server unix:/tmp/unicorn.web.sock fail_timeout=0;
  server unix:/tmp/sockets/thin.sock fail_timeout=0;
  # server 127.0.0.1:3000;
}

server {
  listen 80;
  listen 443 ssl;

  ssl_certificate /etc/ssl/server.crt;
  ssl_certificate_key /etc/ssl/server.key;

  # Application root, as defined previously
  root /home/app/webapp/public;

  try_files $uri/index.html $uri @app;

  location @app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://app;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location ~* ^/assets/ {
    # Per RFC2616 - 1 year maximum expiry
    # http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
    expires 1y;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # fake https so that elb status check works
  location /ping {
    proxy_pass http://app;
    proxy_set_header X-Forwarded-Proto https;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}

#!/bin/sh

# https://github.com/blinkreaction/boot2docker-vagrant
# make sure it's up and running
vagrant up

# start up db from base postgres image
docker run -d --name db \
  -v "/etc/postgresql" \
  -v "/var/log/postgresql" \
  -v "/var/lib/postgresql" \
  -p 5432:5432 \
  postgres:9.4.1
# no need to forcibly delete, can just hook up to it when it's up
# TODO: hide error message if it's already running => check docker ps?
docker start db

docker run -d --name redis \
  -p 6379:6379 \
  redis:2.8 \
  redis-server --appendonly yes
docker start redis

# build any new changes to the image
cd ~/sonar/web/docker
docker build -t local/web .
# delete the old image
# TODO: don't delete if there are no changes
docker rm -f web
# start the new image
docker run -d --name web \
  -v ~/sonar/web:/home/app/webapp \
  -p 80:80 -p 443:443 \
  --link db:db \
  --link redis:redis \
  -e "SONAR_ENV=development" \
  -e "DATABASE_URL=postgres://postgres@db:5432/postgres" \
  -e "SECRET_KEY_BASE=bd75f41c7a4684b94f4ef0cafceb0966293a5b43c2dcf3bed76bbe085c0ec0ea58392ecfdd72f341ef3ea558d8fe3b86bd61bb15955302c675acc8b5fa073823" \
  -e "RAILS_RESQUE_REDIS=redis://redis:6379/0" \
  --dns 8.8.8.8 --dns 8.8.4.4 \
  local/web

# bundle install
docker exec web bundle install
# fire up bash
docker exec -it web bash -l
# /etc/my_startup/start_bundle.sh
# /etc/my_startup/start_thin.sh
